# TrustStream v4.2 - ConfigMaps and Secrets
# Author: MiniMax Agent
# Configuration and secret management

# Application Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: truststream-config
  namespace: truststream-staging
  labels:
    app: truststream
    component: config
data:
  # Application settings
  NODE_ENV: "staging"
  LOG_LEVEL: "info"
  PORT: "3000"
  METRICS_PORT: "9090"
  
  # Database settings
  DB_POOL_SIZE: "10"
  DB_TIMEOUT: "30000"
  
  # Redis settings
  REDIS_TIMEOUT: "5000"
  REDIS_RETRY_ATTEMPTS: "3"
  
  # Application Insights settings
  APPINSIGHTS_DISABLE_METRICS: "false"
  APPINSIGHTS_SAMPLING_PERCENTAGE: "100"
  
  # Worker settings
  WORKER_CONCURRENCY: "5"
  WORKER_TIMEOUT: "300000"
  
  # Feature flags
  ENABLE_METRICS: "true"
  ENABLE_HEALTH_CHECK: "true"
  ENABLE_GRACEFUL_SHUTDOWN: "true"

---
# Nginx Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: truststream-staging
  labels:
    app: truststream
    component: nginx-config
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml;
        
        include /etc/nginx/conf.d/*.conf;
    }

---
# Secrets Template (passwords will be injected by deployment script)
apiVersion: v1
kind: Secret
metadata:
  name: truststream-secrets
  namespace: truststream-staging
  labels:
    app: truststream
    component: secrets
type: Opaque
data:
  # These will be base64 encoded values injected during deployment
  database-url: ""
  jwt-secret: ""
  app-insights-key: ""
  redis-url: ""
  encryption-key: ""