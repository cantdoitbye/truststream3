# Cluster API (CAPI) Configuration for Multi-Cloud Management

apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: trustram-aws-cluster
  namespace: multi-cloud-system
spec:
  clusterNetwork:
    services:
      cidrBlocks: ["10.128.0.0/12"]
    pods:
      cidrBlocks: ["192.168.0.0/16"]
    serviceDomain: "cluster.local"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: AWSCluster
    name: trustram-aws-cluster
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: trustram-aws-control-plane

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSCluster
metadata:
  name: trustram-aws-cluster
  namespace: multi-cloud-system
spec:
  region: us-east-1
  sshKeyName: trustram-keypair
  vpc:
    cidrBlock: "10.0.0.0/16"
    enableDnsHostnames: true
    enableDnsSupport: true
  subnets:
  - id: subnet-public-us-east-1a
    cidrBlock: "10.0.1.0/24"
    availabilityZone: us-east-1a
    isPublic: true
  - id: subnet-public-us-east-1b
    cidrBlock: "10.0.2.0/24"
    availabilityZone: us-east-1b
    isPublic: true
  - id: subnet-private-us-east-1a
    cidrBlock: "10.0.3.0/24"
    availabilityZone: us-east-1a
    isPublic: false
  - id: subnet-private-us-east-1b
    cidrBlock: "10.0.4.0/24"
    availabilityZone: us-east-1b
    isPublic: false

---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: trustram-aws-control-plane
  namespace: multi-cloud-system
spec:
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: aws:///{{ `{{ ds.meta_data.placement.availability_zone }}` }}/{{ `{{ ds.meta_data.instance_id }}` }}
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
          feature-gates: "CSIMigration=true,CSIMigrationAWS=true"
      controllerManager:
        extraArgs:
          cloud-provider: external
          feature-gates: "CSIMigration=true,CSIMigrationAWS=true"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: aws:///{{ `{{ ds.meta_data.placement.availability_zone }}` }}/{{ `{{ ds.meta_data.instance_id }}` }}
  machineTemplate:
    infrastructureRef:
      kind: AWSMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: trustram-aws-control-plane
  replicas: 3
  version: v1.28.3

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: trustram-aws-control-plane
  namespace: multi-cloud-system
spec:
  template:
    spec:
      instanceType: m5.large
      iamInstanceProfile: control-plane.cluster-api-provider-aws.sigs.k8s.io
      sshKeyName: trustram-keypair
      ami:
        id: ami-0abcdef1234567890  # Ubuntu 20.04 LTS
      subnet:
        filters:
        - name: "tag:Name"
          values: 
          - "trustram-aws-cluster-subnet-public*"
      securityGroups:
      - filters:
        - name: "tag:Name"
          values:
          - "trustram-aws-cluster-controlplane-*"

---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: trustram-aws-md-0
  namespace: multi-cloud-system
spec:
  clusterName: trustram-aws-cluster
  replicas: 3
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: trustram-aws-cluster
  template:
    spec:
      clusterName: trustram-aws-cluster
      version: v1.28.3
      bootstrap:
        configRef:
          name: trustram-aws-md-0
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: trustram-aws-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: AWSMachineTemplate

---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: AWSMachineTemplate
metadata:
  name: trustram-aws-md-0
  namespace: multi-cloud-system
spec:
  template:
    spec:
      instanceType: m5.xlarge
      iamInstanceProfile: nodes.cluster-api-provider-aws.sigs.k8s.io
      sshKeyName: trustram-keypair
      ami:
        id: ami-0abcdef1234567890  # Ubuntu 20.04 LTS
      subnet:
        filters:
        - name: "tag:Name"
          values: 
          - "trustram-aws-cluster-subnet-private*"
      securityGroups:
      - filters:
        - name: "tag:Name"
          values:
          - "trustram-aws-cluster-node-*"

---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: trustram-aws-md-0
  namespace: multi-cloud-system
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: aws:///{{ `{{ ds.meta_data.placement.availability_zone }}` }}/{{ `{{ ds.meta_data.instance_id }}` }}
