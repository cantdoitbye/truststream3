# Data Classification and Governance System

apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-classifier
  namespace: compliance
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-classifier
  template:
    metadata:
      labels:
        app: data-classifier
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: data-classifier
      containers:
      - name: data-classifier
        image: quay.io/trustram/data-classifier:v4.4.0
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: ML_MODEL_PATH
          value: "/opt/models/data_classification.pkl"
        - name: CLASSIFICATION_CONFIDENCE_THRESHOLD
          value: "0.8"
        - name: AUTO_LABELING_ENABLED
          value: "true"
        - name: MANUAL_REVIEW_THRESHOLD
          value: "0.6"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: models
          mountPath: /opt/models
        - name: config
          mountPath: /etc/config
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: ml-models-pvc
      - name: config
        configMap:
          name: data-classification-config

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: data-classifier
  namespace: compliance

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: data-classifier
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "patch", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: data-classifier
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: data-classifier
subjects:
- kind: ServiceAccount
  name: data-classifier
  namespace: compliance

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-classification-config
  namespace: compliance
data:
  config.yaml: |
    classification:
      ml_models:
        text_classifier:
          model_path: "/opt/models/text_classification.pkl"
          confidence_threshold: 0.8
          features:
            - "email_patterns"
            - "phone_patterns"
            - "ssn_patterns"
            - "credit_card_patterns"
            - "address_patterns"
            - "medical_terms"
            - "financial_terms"
        
        image_classifier:
          model_path: "/opt/models/image_classification.pkl"
          confidence_threshold: 0.75
          features:
            - "facial_recognition"
            - "document_detection"
            - "sensitive_content"
        
        structured_data_classifier:
          model_path: "/opt/models/structured_data_classification.pkl"
          confidence_threshold: 0.85
          features:
            - "column_names"
            - "data_patterns"
            - "value_distributions"
            - "cardinality"
    
    patterns:
      pii_patterns:
        email:
          regex: "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
          classification: "pii"
          confidence: 0.9
        
        phone:
          regex: "(\+?1-?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})"
          classification: "pii"
          confidence: 0.85
        
        ssn:
          regex: "\b\d{3}-?\d{2}-?\d{4}\b"
          classification: "pii"
          confidence: 0.95
        
        credit_card:
          regex: "\b4[0-9]{12}(?:[0-9]{3})?\b|\b5[1-5][0-9]{14}\b|\b3[47][0-9]{13}\b"
          classification: "restricted"
          confidence: 0.9
      
      phi_patterns:
        medical_record_number:
          regex: "MRN[:\s]*\d{6,10}"
          classification: "phi"
          confidence: 0.9
        
        patient_id:
          regex: "Patient[\s]*ID[:\s]*\d{6,10}"
          classification: "phi"
          confidence: 0.85
        
        diagnosis_codes:
          regex: "[A-Z]\d{2}(\.\d{1,2})?"
          classification: "phi"
          confidence: 0.8
      
      financial_patterns:
        account_number:
          regex: "Account[\s]*Number[:\s]*\d{8,12}"
          classification: "confidential"
          confidence: 0.85
        
        routing_number:
          regex: "\b\d{9}\b"
          classification: "confidential"
          confidence: 0.7
        
        tax_id:
          regex: "\b\d{2}-\d{7}\b"
          classification: "restricted"
          confidence: 0.9
    
    auto_labeling:
      enabled: true
      confidence_threshold: 0.8
      manual_review_threshold: 0.6
      
      labeling_rules:
        - condition: "confidence >= 0.9"
          action: "auto_label"
          approval_required: false
        
        - condition: "confidence >= 0.6 and confidence < 0.9"
          action: "flag_for_review"
          approval_required: true
        
        - condition: "confidence < 0.6"
          action: "manual_classification"
          approval_required: true
    
    labeling:
      kubernetes_labels:
        data_classification: "data.classification/level"
        data_type: "data.type/category"
        compliance_framework: "compliance.framework/applicable"
        retention_period: "data.retention/period"
        encryption_required: "security.encryption/required"
        access_level: "security.access/level"
      
      istio_labels:
        data_classification: "data-classification"
        compliance_required: "compliance-required"
        encryption_level: "encryption-level"
    
    retention_policies:
      pii:
        default_period: "2y"
        maximum_period: "7y"
        deletion_triggers:
          - "consent_withdrawal"
          - "purpose_fulfillment"
          - "legal_obligation"
      
      phi:
        default_period: "6y"
        maximum_period: "lifetime_plus_30y"
        deletion_triggers:
          - "patient_request"
          - "legal_requirement"
      
      financial:
        default_period: "7y"
        maximum_period: "indefinite"
        deletion_triggers:
          - "regulatory_requirement"
          - "business_purpose_end"
      
      general:
        default_period: "3y"
        maximum_period: "10y"
        deletion_triggers:
          - "business_purpose_end"
          - "storage_cost_optimization"
    
    monitoring:
      metrics:
        - name: "data_classification_accuracy"
          type: "gauge"
          labels: ["model_type", "data_type"]
        
        - name: "manual_review_queue_size"
          type: "gauge"
          labels: ["classification_level"]
        
        - name: "retention_policy_violations"
          type: "counter"
          labels: ["data_type", "violation_type"]
        
        - name: "automated_deletions"
          type: "counter"
          labels: ["data_type", "deletion_trigger"]

---
# Data Retention and Deletion Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-retention-service
  namespace: compliance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-retention-service
  template:
    metadata:
      labels:
        app: data-retention-service
    spec:
      serviceAccountName: data-retention-service
      containers:
      - name: data-retention-service
        image: quay.io/trustram/data-retention-service:v4.4.0
        ports:
        - containerPort: 8080
        env:
        - name: RETENTION_CHECK_INTERVAL
          value: "86400"  # 24 hours
        - name: DELETION_BATCH_SIZE
          value: "1000"
        - name: SOFT_DELETE_ENABLED
          value: "true"
        - name: AUDIT_LOGGING_ENABLED
          value: "true"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        volumeMounts:
        - name: retention-config
          mountPath: /etc/config
      volumes:
      - name: retention-config
        configMap:
          name: data-retention-config

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: data-retention-service
  namespace: compliance

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: data-retention-service
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: data-retention-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: data-retention-service
subjects:
- kind: ServiceAccount
  name: data-retention-service
  namespace: compliance

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-retention-config
  namespace: compliance
data:
  config.yaml: |
    retention:
      check_interval: 86400  # 24 hours
      batch_size: 1000
      soft_delete_enabled: true
      audit_logging: true
      
      policies:
        - data_type: "pii"
          retention_period: "2y"
          deletion_method: "secure_wipe"
          backup_retention: "30d"
          compliance_frameworks: ["gdpr", "ccpa"]
        
        - data_type: "phi"
          retention_period: "6y"
          deletion_method: "secure_wipe"
          backup_retention: "90d"
          compliance_frameworks: ["hipaa"]
        
        - data_type: "financial"
          retention_period: "7y"
          deletion_method: "secure_wipe"
          backup_retention: "180d"
          compliance_frameworks: ["soc2", "sox"]
        
        - data_type: "audit_logs"
          retention_period: "7y"
          deletion_method: "archive"
          backup_retention: "indefinite"
          compliance_frameworks: ["all"]
      
      deletion_triggers:
        - name: "retention_period_expired"
          condition: "current_date > created_date + retention_period"
          action: "scheduled_deletion"
        
        - name: "consent_withdrawal"
          condition: "consent_status == 'withdrawn'"
          action: "immediate_deletion"
        
        - name: "right_to_erasure"
          condition: "deletion_request_received"
          action: "immediate_deletion"
        
        - name: "legal_hold_released"
          condition: "legal_hold_status == 'released'"
          action: "resume_normal_retention"
      
      deletion_methods:
        secure_wipe:
          overwrite_passes: 3
          verification_required: true
          certificate_generation: true
        
        archive:
          compression: true
          encryption: true
          storage_class: "cold"
          access_restrictions: "admin_only"
        
        soft_delete:
          retention_period: "30d"
          recovery_possible: true
          audit_trail: true
    
    monitoring:
      metrics:
        - name: "data_retention_checks"
          type: "counter"
          labels: ["data_type", "action"]
        
        - name: "data_deletions"
          type: "counter"
          labels: ["data_type", "deletion_method"]
        
        - name: "retention_policy_violations"
          type: "counter"
          labels: ["data_type", "violation_type"]
      
      alerts:
        - name: "retention_policy_violation"
          condition: "retention_policy_violations > 0"
          severity: "high"
        
        - name: "deletion_failure"
          condition: "data_deletion_errors > 0"
          severity: "critical"

---
# CronJob for Data Retention Checks
apiVersion: batch/v1
kind: CronJob
metadata:
  name: data-retention-check
  namespace: compliance
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: data-retention-service
          containers:
          - name: retention-check
            image: quay.io/trustram/data-retention-service:v4.4.0
            command: ["/usr/local/bin/retention-check"]
            env:
            - name: DRY_RUN
              value: "false"
            - name: BATCH_SIZE
              value: "1000"
            volumeMounts:
            - name: retention-config
              mountPath: /etc/config
          volumes:
          - name: retention-config
            configMap:
              name: data-retention-config
          restartPolicy: OnFailure

---
apiVersion: v1
kind: Service
metadata:
  name: compliance-controller
  namespace: compliance
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  selector:
    app: compliance-controller