# Circuit Breaker and Traffic Management Configuration

# Circuit Breaker for Cross-Cloud Services
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: circuit-breaker-global
  namespace: istio-system
spec:
  host: "*.trustram.local"
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 10
        connectTimeout: 30s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 10
        http2MaxRequests: 100
        maxRequestsPerConnection: 2
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 50
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50
      splitExternalLocalOriginErrors: true

---
# Health Check Configuration
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: health-check-routing
  namespace: trustram-system
spec:
  hosts:
  - "*"
  http:
  - match:
    - uri:
        prefix: "/health"
    route:
    - destination:
        host: health-check-service.trustram-system.svc.cluster.local
    timeout: 5s
    retries:
      attempts: 3
      perTryTimeout: 2s
      retryOn: 5xx,reset,connect-failure,refused-stream

---
# Fault Injection for Testing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: fault-injection-testing
  namespace: trustram-system
spec:
  hosts:
  - test-service.trustram-system.svc.cluster.local
  http:
  - match:
    - headers:
        test-fault:
          exact: "delay"
    fault:
      delay:
        percentage:
          value: 10.0
        fixedDelay: 5s
    route:
    - destination:
        host: test-service.trustram-system.svc.cluster.local
  - match:
    - headers:
        test-fault:
          exact: "abort"
    fault:
      abort:
        percentage:
          value: 10.0
        httpStatus: 503
    route:
    - destination:
        host: test-service.trustram-system.svc.cluster.local
  - route:
    - destination:
        host: test-service.trustram-system.svc.cluster.local

---
# Traffic Splitting for Canary Deployments
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: canary-deployment
  namespace: trustram-system
spec:
  hosts:
  - trustram-api.trustram-system.svc.cluster.local
  http:
  - match:
    - headers:
        canary:
          exact: "true"
    route:
    - destination:
        host: trustram-api.trustram-system.svc.cluster.local
        subset: canary
  - route:
    - destination:
        host: trustram-api.trustram-system.svc.cluster.local
        subset: stable
      weight: 90
    - destination:
        host: trustram-api.trustram-system.svc.cluster.local
        subset: canary
      weight: 10

---
# Destination Rule for Canary Subsets
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: trustram-api-subsets
  namespace: trustram-system
spec:
  host: trustram-api.trustram-system.svc.cluster.local
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 50
        maxRequestsPerConnection: 10
    outlierDetection:
      consecutive5xxErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
  subsets:
  - name: stable
    labels:
      version: stable
    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 100
  - name: canary
    labels:
      version: canary
    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 20

---
# Security Policy - Mutual TLS
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
  namespace: istio-system
spec:
  mtls:
    mode: STRICT

---
# Authorization Policy for Cross-Cloud Services
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: cross-cloud-access
  namespace: trustram-system
spec:
  selector:
    matchLabels:
      app: trustram-api
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/trustram-system/sa/trustram-api"]
    - source:
        namespaces: ["trustram-system"]
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
    - operation:
        paths: ["/api/*"]
  when:
  - key: source.cluster
    values: ["aws-cluster", "azure-cluster", "gcp-cluster", "management-cluster"]

---
# Rate Limiting Configuration
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-filter
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: rate_limiter
            token_bucket:
              max_tokens: 100
              tokens_per_fill: 100
              fill_interval: 60s
            filter_enabled:
              runtime_key: rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED
            response_headers_to_add:
            - append: false
              header:
                key: x-rate-limited
                value: 'true'