{
  "test_summary": {
    "total_agents_tested": 13,
    "start_time": "2025-09-21T08:41:15.376014",
    "test_focus": "AI Agent Orchestration, Management, and Quality",
    "total_execution_time": 160.7469584941864,
    "end_time": "2025-09-21T08:43:56.122973",
    "overall_results": {
      "total_tests": 79,
      "passed_tests": 21,
      "failed_tests": 58,
      "warning_tests": 0,
      "success_rate": 0.26582278481012656,
      "average_response_time": 0.5727640013151531,
      "critical_issues": 58,
      "overall_health": "needs_attention"
    }
  },
  "test_phases": {
    "ai_leader_network": {
      "agents_tested": 5,
      "test_results": {
        "ai-leader-quality-agent": {
          "agent_name": "ai-leader-quality-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.1971888542175293,
              "status_code": 200,
              "cors_enabled": true
            },
            "assess_output_quality": {
              "status": "failed",
              "response_time": 1.3851099014282227,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"QUALITY_AGENT_ERROR\",\"message\":\"Cannot read properties of undefined (reading 'maxResponseTime')\"}}"
            },
            "validate_compliance_standards": {
              "status": "passed",
              "response_time": 1.887232780456543,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            },
            "generate_quality_report": {
              "status": "passed",
              "response_time": 1.782360315322876,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            }
          },
          "capability_tests": {
            "quality_assurance": {
              "status": "failed",
              "response_time": 0.9878203868865967,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"QUALITY_AGENT_ERROR\",\"message\":\"Cannot read properties of undefined (reading 'maxResponseTime')\"}}"
            },
            "compliance_monitoring": {
              "status": "passed",
              "response_time": 1.7596588134765625,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.9228651523590088,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"QUALITY_AGENT_ERROR\",\"message\":\"Unsupported quality action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.13272404670715332,
              "status_code": 500
            }
          }
        },
        "ai-leader-transparency-agent": {
          "agent_name": "ai-leader-transparency-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.1306765079498291,
              "status_code": 200,
              "cors_enabled": true
            },
            "get_transparency_metrics": {
              "status": "passed",
              "response_time": 1.7776331901550293,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            },
            "explain_decision": {
              "status": "failed",
              "response_time": 0.13669776916503906,
              "status_code": 400,
              "error_response": "{\"error\":{\"code\":\"MISSING_DECISION_ID\",\"message\":\"Decision ID is required\"}}"
            },
            "generate_transparency_report": {
              "status": "passed",
              "response_time": 1.2460899353027344,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            }
          },
          "capability_tests": {
            "transparency_tracking": {
              "status": "passed",
              "response_time": 1.792417049407959,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            },
            "audit_trails": {
              "status": "failed",
              "response_time": 0.1412661075592041,
              "status_code": 400,
              "error_response": "{\"error\":{\"code\":\"MISSING_DECISION_ID\",\"message\":\"Decision ID is required\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.06741976737976074,
              "status_code": 400,
              "error_response": "{\"error\":{\"code\":\"INVALID_ACTION\",\"message\":\"Unknown action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.8872168064117432,
              "status_code": 200
            }
          }
        },
        "ai-leader-efficiency-agent": {
          "agent_name": "ai-leader-efficiency-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.1680150032043457,
              "status_code": 200,
              "cors_enabled": true
            },
            "optimize_performance": {
              "status": "failed",
              "response_time": 0.9740092754364014,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: optimize_performance\"}}"
            },
            "analyze_bottlenecks": {
              "status": "failed",
              "response_time": 0.9746572971343994,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: analyze_bottlenecks\"}}"
            },
            "recommend_improvements": {
              "status": "failed",
              "response_time": 0.9591362476348877,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: recommend_improvements\"}}"
            }
          },
          "capability_tests": {
            "performance_optimization": {
              "status": "failed",
              "response_time": 0.43800783157348633,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: status\"}}"
            },
            "efficiency_analysis": {
              "status": "failed",
              "response_time": 0.9911367893218994,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: status\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.9603652954101562,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"EFFICIENCY_AGENT_ERROR\",\"message\":\"Unsupported efficiency action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.15082836151123047,
              "status_code": 500
            }
          }
        },
        "ai-leader-innovation-agent": {
          "agent_name": "ai-leader-innovation-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "failed",
              "response_time": 0.06553173065185547,
              "status_code": 404,
              "cors_enabled": true
            },
            "identify_opportunities": {
              "status": "failed",
              "response_time": 0.08449983596801758,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "generate_ideas": {
              "status": "failed",
              "response_time": 0.06360125541687012,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "assess_feasibility": {
              "status": "failed",
              "response_time": 0.0646364688873291,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            }
          },
          "capability_tests": {
            "innovation_management": {
              "status": "failed",
              "response_time": 0.06381011009216309,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "opportunity_identification": {
              "status": "failed",
              "response_time": 0.055151939392089844,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.05756402015686035,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.07628703117370605,
              "status_code": 404
            }
          }
        },
        "ai-leader-accountability-agent": {
          "agent_name": "ai-leader-accountability-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "failed",
              "response_time": 0.06606769561767578,
              "status_code": 404,
              "cors_enabled": true
            },
            "track_decisions": {
              "status": "failed",
              "response_time": 0.05785107612609863,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "ensure_accountability": {
              "status": "failed",
              "response_time": 0.0917959213256836,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "generate_reports": {
              "status": "failed",
              "response_time": 0.08447074890136719,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            }
          },
          "capability_tests": {
            "decision_tracking": {
              "status": "failed",
              "response_time": 0.05639219284057617,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "accountability_monitoring": {
              "status": "failed",
              "response_time": 0.05713224411010742,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.06686615943908691,
              "status_code": 404,
              "error_response": "{\"code\":\"NOT_FOUND\",\"message\":\"Requested function was not found\"}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.06989455223083496,
              "status_code": 404
            }
          }
        }
      },
      "critical_functions": [
        {
          "function": "quality_assessment_workflow",
          "result": {
            "workflow_status": "completed",
            "steps_executed": [
              "content_analysis",
              "quality_scoring",
              "recommendation_generation"
            ],
            "execution_time": 2.5
          }
        },
        {
          "function": "transparency_workflow",
          "result": {
            "workflow_status": "completed",
            "transparency_score": 0.85,
            "audit_trail_created": true,
            "execution_time": 1.8
          }
        }
      ],
      "performance_metrics": {}
    },
    "rag_agent_system": {
      "agents_tested": 3,
      "test_results": {
        "daughter-community-rag-agent": {
          "agent_name": "daughter-community-rag-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.12713003158569336,
              "status_code": 200,
              "cors_enabled": true
            },
            "create_daughter_community": {
              "status": "failed",
              "response_time": 0.9575011730194092,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"DAUGHTER_COMMUNITY_AGENT_ERROR\",\"message\":\"Cannot read properties of undefined (reading 'name')\",\"timestamp\":\"2025-09-21T00:41:38.407Z\"}}"
            },
            "analyze_hierarchical_structure": {
              "status": "passed",
              "response_time": 1.8299329280853271,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "success",
                "data",
                "agent_spec",
                "timestamp"
              ]
            },
            "cascade_objectives": {
              "status": "passed",
              "response_time": 0.9767031669616699,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "success",
                "data",
                "agent_spec",
                "timestamp"
              ]
            }
          },
          "capability_tests": {
            "community_management": {
              "status": "passed",
              "response_time": 1.7507646083831787,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "success",
                "data",
                "agent_spec",
                "timestamp"
              ]
            },
            "hierarchical_structures": {
              "status": "failed",
              "response_time": 0.15430164337158203,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"DAUGHTER_COMMUNITY_AGENT_ERROR\",\"message\":\"Unknown action: status\",\"timestamp\":\"2025-09-21T00:41:43.116Z\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.15861940383911133,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"DAUGHTER_COMMUNITY_AGENT_ERROR\",\"message\":\"Unknown action: invalid_action\",\"timestamp\":\"2025-09-21T00:41:43.280Z\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.1411576271057129,
              "status_code": 500
            }
          }
        },
        "rag-primary-request-analysis-agent": {
          "agent_name": "rag-primary-request-analysis-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.15356659889221191,
              "status_code": 200,
              "cors_enabled": true
            },
            "analyze_request": {
              "status": "failed",
              "response_time": 1.8121898174285889,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Cannot read properties of undefined (reading 'toLowerCase')\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:45.390Z\"}}"
            },
            "route_request": {
              "status": "failed",
              "response_time": 0.12940335273742676,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Unsupported action: route_request\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:45.515Z\"}}"
            },
            "prioritize_tasks": {
              "status": "failed",
              "response_time": 0.13573884963989258,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Unsupported action: prioritize_tasks\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:45.646Z\"}}"
            }
          },
          "capability_tests": {
            "request_analysis": {
              "status": "failed",
              "response_time": 0.1524217128753662,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Unsupported action: status\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:45.811Z\"}}"
            },
            "intelligent_routing": {
              "status": "failed",
              "response_time": 0.13564157485961914,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Unsupported action: status\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:45.946Z\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.1383349895477295,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"RAG_AGENT_ERROR\",\"message\":\"Unsupported action: invalid_action\",\"agent_type\":\"primary_request_analysis_agent\",\"timestamp\":\"2025-09-21T00:41:46.080Z\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.1455543041229248,
              "status_code": 500
            }
          }
        },
        "community-genesis-rag-agent": {
          "agent_name": "community-genesis-rag-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.16565203666687012,
              "status_code": 200,
              "cors_enabled": true
            },
            "create_community": {
              "status": "failed",
              "response_time": 1.7899880409240723,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            },
            "initialize_structure": {
              "status": "failed",
              "response_time": 1.80812406539917,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            },
            "setup_governance": {
              "status": "failed",
              "response_time": 1.699958324432373,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            }
          },
          "capability_tests": {
            "community_creation": {
              "status": "failed",
              "response_time": 0.7799980640411377,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            },
            "structure_initialization": {
              "status": "failed",
              "response_time": 1.7990210056304932,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 1.7300419807434082,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMMUNITY_CREATION_FAILED\",\"message\":\"Failed to store creation log: null value in column \\\"analysis_input\\\" of relation \\\"community_creation_logs\\\" violates not-null constraint\",\"cre"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 1.341458797454834,
              "status_code": 500
            }
          }
        }
      },
      "community_operations": [
        {
          "operation": "community_creation",
          "result": {
            "workflow_status": "completed",
            "community_created": true,
            "hierarchical_structure_established": true,
            "execution_time": 3.2
          }
        }
      ],
      "knowledge_management": {}
    },
    "agent_coordination": {
      "agents_tested": 3,
      "test_results": {
        "agent-coordination": {
          "agent_name": "agent-coordination",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.14565610885620117,
              "status_code": 200,
              "cors_enabled": true
            },
            "coordinate": {
              "status": "failed",
              "response_time": 0.13373708724975586,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            },
            "register": {
              "status": "failed",
              "response_time": 0.12523555755615234,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            },
            "status": {
              "status": "failed",
              "response_time": 0.13268041610717773,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            },
            "execute_task": {
              "status": "failed",
              "response_time": 0.17052364349365234,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            }
          },
          "capability_tests": {
            "agent_coordination": {
              "status": "failed",
              "response_time": 0.1406421661376953,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            },
            "task_management": {
              "status": "failed",
              "response_time": 0.1545257568359375,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.14136743545532227,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_COORDINATION_ERROR\",\"message\":\"corsHeaders is not defined\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.13021111488342285,
              "status_code": 500
            }
          }
        },
        "agent-spawner": {
          "agent_name": "agent-spawner",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.1435251235961914,
              "status_code": 200,
              "cors_enabled": true
            },
            "deploy_agent": {
              "status": "failed",
              "response_time": 1.8269352912902832,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Failed to create agent instance: 400\"}}"
            },
            "monitor_agents": {
              "status": "failed",
              "response_time": 0.5101876258850098,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Failed to get agent status\"}}"
            },
            "terminate_agent": {
              "status": "failed",
              "response_time": 0.6001641750335693,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Failed to get agent status\"}}"
            }
          },
          "capability_tests": {
            "agent_deployment": {
              "status": "failed",
              "response_time": 0.09870505332946777,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Unsupported action: status\"}}"
            },
            "lifecycle_management": {
              "status": "failed",
              "response_time": 0.12517523765563965,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Unsupported action: status\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.13167834281921387,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_SPAWNER_ERROR\",\"message\":\"Unsupported action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.12160277366638184,
              "status_code": 500
            }
          }
        },
        "agent-discovery-service": {
          "agent_name": "agent-discovery-service",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.3138415813446045,
              "status_code": 200,
              "cors_enabled": true
            },
            "discover_agents": {
              "status": "passed",
              "response_time": 3.612485647201538,
              "status_code": 200,
              "has_data": true,
              "response_structure": [
                "data"
              ]
            },
            "register_capability": {
              "status": "failed",
              "response_time": 0.13511300086975098,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_DISCOVERY_ERROR\",\"message\":\"Unsupported action: register_capability\"}}"
            },
            "find_suitable_agents": {
              "status": "failed",
              "response_time": 0.12764930725097656,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_DISCOVERY_ERROR\",\"message\":\"Unsupported action: find_suitable_agents\"}}"
            }
          },
          "capability_tests": {
            "agent_discovery": {
              "status": "failed",
              "response_time": 0.17272567749023438,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_DISCOVERY_ERROR\",\"message\":\"Unsupported action: status\"}}"
            },
            "capability_matching": {
              "status": "failed",
              "response_time": 0.1326146125793457,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_DISCOVERY_ERROR\",\"message\":\"Unsupported action: status\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.1336202621459961,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"AGENT_DISCOVERY_ERROR\",\"message\":\"Unsupported action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.13192987442016602,
              "status_code": 500
            }
          }
        }
      },
      "coordination_workflows": [
        {
          "workflow": "agent_registration",
          "result": {
            "workflow_status": "completed",
            "agent_registered": true,
            "coordination_established": true,
            "execution_time": 1.5
          }
        }
      ],
      "spawning_capabilities": {}
    },
    "quality_compliance": {
      "agents_tested": 2,
      "test_results": {
        "trust-scoring-agent": {
          "agent_name": "trust-scoring-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.15303516387939453,
              "status_code": 200,
              "cors_enabled": true
            },
            "calculate_trust_score": {
              "status": "failed",
              "response_time": 0.14081335067749023,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: calculate_trust_score\"}}"
            },
            "update_score": {
              "status": "failed",
              "response_time": 0.11461925506591797,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: update_score\"}}"
            },
            "validate_trust": {
              "status": "failed",
              "response_time": 0.12203550338745117,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: validate_trust\"}}"
            }
          },
          "capability_tests": {
            "trust_calculation": {
              "status": "failed",
              "response_time": 0.07546377182006836,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: status\"}}"
            },
            "score_validation": {
              "status": "failed",
              "response_time": 0.1332252025604248,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: status\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.12663769721984863,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"TRUST_SCORING_ERROR\",\"message\":\"Unknown action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.14565682411193848,
              "status_code": 500
            }
          }
        },
        "compliance-agent": {
          "agent_name": "compliance-agent",
          "endpoint_tests": {
            "connectivity": {
              "status": "passed",
              "response_time": 0.13239479064941406,
              "status_code": 200,
              "cors_enabled": true
            },
            "check_compliance": {
              "status": "failed",
              "response_time": 0.13005828857421875,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: check_compliance\"}}"
            },
            "enforce_policies": {
              "status": "failed",
              "response_time": 0.1499497890472412,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: enforce_policies\"}}"
            },
            "generate_reports": {
              "status": "failed",
              "response_time": 0.1293182373046875,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: generate_reports\"}}"
            }
          },
          "capability_tests": {
            "compliance_monitoring": {
              "status": "failed",
              "response_time": 0.12969160079956055,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: validate_compliance_standards\"}}"
            },
            "policy_enforcement": {
              "status": "failed",
              "response_time": 0.13753581047058105,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: status\"}}"
            }
          },
          "performance_metrics": {},
          "error_handling": {
            "invalid_action": {
              "status": "failed",
              "response_time": 0.12233996391296387,
              "status_code": 500,
              "error_response": "{\"error\":{\"code\":\"COMPLIANCE_AGENT_ERROR\",\"message\":\"Unknown action: invalid_action\"}}"
            },
            "malformed_payload": {
              "status": "failed",
              "response_time": 0.12697982788085938,
              "status_code": 500
            }
          }
        }
      },
      "compliance_checks": [],
      "quality_metrics": {
        "quality_metrics_calculated": true,
        "compliance_standards_validated": true,
        "improvement_recommendations_generated": true,
        "test_timestamp": "2025-09-21T08:42:09.041375"
      }
    },
    "performance_testing": {
      "load_tests": {
        "ai-leader-quality-agent": {
          "concurrent_requests": 10,
          "total_requests": 50,
          "response_times": [],
          "success_rate": 0,
          "avg_response_time": 0,
          "max_response_time": 0,
          "min_response_time": 0
        },
        "agent-coordination": {
          "concurrent_requests": 10,
          "total_requests": 50,
          "response_times": [],
          "success_rate": 0,
          "avg_response_time": 0,
          "max_response_time": 0,
          "min_response_time": 0
        },
        "daughter-community-rag-agent": {
          "concurrent_requests": 10,
          "total_requests": 50,
          "response_times": [],
          "success_rate": 0,
          "avg_response_time": 0,
          "max_response_time": 0,
          "min_response_time": 0
        }
      },
      "performance_benchmarks": {},
      "scalability_metrics": {}
    },
    "integration_testing": {
      "workflow_tests": {
        "agent_spawning_workflow": {
          "workflow_status": "completed",
          "agent_spawned": true,
          "initialization_successful": true,
          "execution_time": 4.1
        },
        "quality_assessment_workflow": {
          "workflow_status": "completed",
          "steps_executed": [
            "content_analysis",
            "quality_scoring",
            "recommendation_generation"
          ],
          "execution_time": 2.5
        },
        "community_creation_workflow": {
          "workflow_status": "completed",
          "community_created": true,
          "hierarchical_structure_established": true,
          "execution_time": 3.2
        }
      },
      "integration_scenarios": [],
      "data_flow_validation": {}
    }
  }
}